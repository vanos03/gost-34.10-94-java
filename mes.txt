В мире, где информационные технологии проникают во все сферы нашей жизни, обеспечение надежной защиты данных становится приоритетной задачей. Исходя из этого, рассмотрим структуру информационных систем как иерархию прикладных программ.
Построение защищенной ИС становится необходимостью, учитывая динамичность цифровой среды и растущее количество угроз. В данном контексте, структура ИС, представляющая собой иерархию логически связанных приложений, требует особого внимания к обеспечению безопасности каждого компонента этой иерархии. Структуру ИС можно условно разделить на несколько плоскостей по модели OSI/RM.

Плоскость защиты включает:
а) Требования безопасности (TR): Определение уровня защиты и проверка соответствия требованиям безопасности Информационной Системы (ИС) на основе руководящих документов и нормативов в области информационной безопасности. Обеспечение конфиденциальности, целостности и доступности информации.
б) Механизмы защиты: Реализация методов и методологий, обеспечивающих безопасность функций всех плоскостей.
в) Система защиты как ИС: Представление системы защиты как базовой плоскости, включающей программно-аппаратные механизмы защиты. Защитные приложения могут использовать общую платформу с компонентами базовой целевой плоскости.
Категории требований к ИС:
• Бизнес-требования: Ожидания топ-менеджмента от системы.
• Пользовательские требования: Архитектурные аспекты из взгляда пользователей.
• Функциональные требования: Реализация функций для выполнения задач пользователей.
• Нефункциональные требования: Атрибуты качества, определяющие метрики (производительность, пропускная способность, время реакции, параметры надежности) и системные требования, описывающие внешние интерфейсы.
• Требования информационной безопасности: Системные требования, определяющие свойства безопасности, и требования политики информационной безопасности.
Измеримость плоскости защиты важна для:
Оценки эффективности: Пает централизованную базу данных, где собирается, хранится и публикуется информация об уязвимостях. Эта база данных доступна для разработчиков, системных администраторов и исследователей для отслеживания и устранения уязвимостей.
4.	Согласованная нумерация: Идентификаторы CVE назначаются и согласовываются организацией MITRE Corporation. Они работают с сообществом безопасности и производителями для обеспечения правильной нумерации уязвимостей.
5.	Использование в системах оценки рисков:Идентификаторы CVE широко используются в инструментах оценки рисков информационной безопасности, таких как системы управления уязвимостями, а также в базах данных эксплойтов.
6.	Сотрудничество и обмен информацией: CVE способствует обмену информацией о безопасности между организациями и сообществом информационной безопасности, что способствует более эффективной реакции на уязвимости и снижению рисков.
7.	Комплементарность другим стандартам и системам: CVE не заменяет другие системы идентификации уязвимостей, такие как Common Vulnerability Scoring System (CVSS) или National Vulnerability Database (NVD), а дополняет их, предоставляя уникальные идентификаторы уязвимостей.

Ключевые параметры уязвимости:
- Номер уязвимости, например CVE-2019-0708 
- Шкала критичности (метрика), например 9.8 CRITICAL 
- Вектор, например CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
- Конкретный недостаток реализации, например CWE-416
- Применимость (CPE), например microsoft:windows7 sp1
- Наличие исправления или способы смягчения последствий
Шкала критичности:
Предназначена для того, чтобы быстро понять, насколько критична уязвимость. В цифровом эквиваленте измеряется в диапазоне от 0 до 10. Часто в системах используется словесные интерпретации, такие как:
     - Низкий уровень критичности (0-5)
- Средний уровень критичности (5-7)
- Высокий уровень критичности (7-9)
- Критическая уязвимость (9-10)
Метрики (CVSS):
Для определения критичности используются метрики, они же Common Vulnerability Scoring System. Есть 3 вида метрик:
-	Базовые метрики – общие метрики для уязвимости без учета времени и контекста применимости
-	Временные метрики – учитывают реакцию производителя уязвимого продукта, которые изменяются с момента обнаружения уязвимости и до момента её исправления
-	Контекстные метрики – оперируют требованиями безопасности к системе, в которой работает уязвимый продукт
Временные метрики
Временные метрики вносят в общую оценку поправку на полноту имеющейся информации об уязвимости, зрелость эксплуатирующего кода (при его наличии) и доступность исправлений:
- Доступность средств эксплуатации (E)
- Доступность средств устранения (RL)
- Степень доверия к информации об уязвимости (RC)
Контекстные метрики
С использованием контекстных метрик эксперты по безопасности могут учесть особенности информационной среды и внести поправки в окончательную оценку уровня уязвимости. Временные и контекстные метрики являются необязательными элементами, но они используются для более точной оценки уровня риска, который представляет данная уязвимость для конкретной информационной инфраструктуры.
Правила формирования векторов атаки:
Вектор атаки (AV)

Сложность атаки (AС)
 
Уровень привилегий (PR)
 
Взаимодействие с пользователем (UI)
 
Влияние на другие компоненты системы (S)
 
Влияние на конфиденциальность (С)

Влияние на целостность (I)

Влияние на доступность (A)    
 
Стоит заметить, что CVE является фундаментальным инструментом для обеспечения безопасности информационных систем. Она позволяет эффективно управлять рисками и реагировать на уязвимости, обеспечивая транспарентность и согласованность в сообществе информационной безопасности.
